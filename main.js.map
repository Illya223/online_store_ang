{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/checkout/checkout.component.css","webpack:///./src/app/checkout/checkout.component.html","webpack:///./src/app/checkout/checkout.component.ts","webpack:///./src/app/product-detail/product-detail.component.css","webpack:///./src/app/product-detail/product-detail.component.html","webpack:///./src/app/product-detail/product-detail.component.ts","webpack:///./src/app/product-list/product-list.component.css","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/app/product.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"a{\\r\\n    text-decoration: none;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <nav>\\n   <h1> <a routerLink=\\\"/products\\\" style=\\\"color: black;\\\">Products</a></h1>\\n    <!-- Другие ссылки... -->\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-online-store';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { CartComponent } from './cart/cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/products', pathMatch: 'full' },\n  { path: 'products', component: ProductListComponent },\n  { path: 'products/:id', component: ProductDetailComponent },\n  { path: 'cart', component: CartComponent },\n  { path: 'checkout', component: CheckoutComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductDetailComponent,\n    CartComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    [RouterModule.forRoot(routes)],\n    FormsModule,\n  ],\n  exports: [RouterModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport interface Product {\n  id: number;\n  name: string;\n  description: string;\n  price: number;\n  imageUrl: string;\n}\n\n\nexport interface CartItem {\n  product: Product;\n  quantity: number;\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CartItem } from './app.module';\nimport { Product } from './app.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private cartItems: CartItem[] = [];\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>(this.cartItems);\n\n  getCartItems() {\n    return this.cartItemsSubject.asObservable();\n  }\n\n  addToCart(product: Product, quantity: number) {\n    const existingItem = this.cartItems.find(item => item.product.id === product.id);\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      this.cartItems.push({ product, quantity });\n    }\n    this.cartItemsSubject.next(this.cartItems);\n  }\n\n  removeFromCart(product: Product) {\n    this.cartItems = this.cartItems.filter(item => item.product.id !== product.id);\n    this.cartItemsSubject.next(this.cartItems);\n  }\n\n  getTotal() {\n    return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\n  }\n\n \n\n  clearCart() {\n    this.cartItems = [];\n    this.cartItemsSubject.next(this.cartItems);\n  }\n\n\n  constructor() { }\n}\n","module.exports = \".img{\\r\\n    width: 300px;\\r\\n    height: 300px;\\r\\n}\\r\\nbutton{\\r\\n    background-color: gray;\\r\\n    padding: 10px 20px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    margin-left:  20px;\\r\\n    \\r\\n}\\r\\na{\\r\\n    text-decoration: none;\\r\\n}\\r\\n@media (max-width: 350px) {\\r\\n    .img{\\r\\n        width: 250px;\\r\\n        height: 250px;\\r\\n    }\\r\\n}\"","module.exports = \"<!-- cart.component.html -->\\n<button [routerLink]=\\\"['/products']\\\">BACK</button>\\n<h1>Cart</h1>\\n\\n<div class=\\\"cart\\\">\\n  <div class=\\\"cart-item\\\" *ngFor=\\\"let item of cartItems\\\">\\n    <img class=\\\"img\\\" [src]=\\\"item.product.imageUrl\\\" alt=\\\"{{ item.product.name }}\\\">\\n    <h3>{{ item.product.name }}</h3>\\n    <p>{{ item.product.price | currency }} x {{ item.quantity }}</p>\\n    <button style=\\\"color:red\\\" (click)=\\\"removeFromCart(item)\\\">Remove</button>\\n  </div>\\n  <h3>Total: {{ total | currency }}</h3>\\n <button><a [routerLink]=\\\"['/checkout']\\\">Checkout</a></button> \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { CartItem } from '../app.module';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  cartItems: CartItem[] = [];\n  total = 0;\n\n  constructor(private cartService: CartService) { }\n\n  \n  ngOnInit(): void {\n    this.cartService.getCartItems().subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.total = this.cartService.getTotal();\n    });\n  }\n\n  removeFromCart(item: CartItem) {\n    this.cartService.removeFromCart(item.product);\n  }\n\n}\n","module.exports = \"form {\\r\\n    max-width: 600px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n  \\r\\n  div {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  label {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    box-sizing: border-box;\\r\\n    margin: 0 10px;\\r\\n  }\\r\\n  \\r\\n  button {\\r\\n    padding: 10px 20px;\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  button[disabled] {\\r\\n    background-color: #ccc;\\r\\n  }\\r\\n  \"","module.exports = \"<button style=\\\"margin:10px 20px; background-color: gray; color: black;\\\" [routerLink]=\\\"['/cart']\\\">BACK</button>\\n<h1>Checkout</h1>\\n<form (ngSubmit)=\\\"onSubmit()\\\" #checkoutForm=\\\"ngForm\\\">\\n  <div>\\n    <label for=\\\"name\\\">Name:</label>\\n    <input type=\\\"text\\\" id=\\\"name\\\" required [(ngModel)]=\\\"checkoutData.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n    <div *ngIf=\\\"name.invalid && name.touched\\\">Name is required</div>\\n  </div>\\n  <div>\\n    <label for=\\\"address\\\">Address:</label>\\n    <input type=\\\"text\\\" id=\\\"address\\\" required [(ngModel)]=\\\"checkoutData.address\\\" name=\\\"address\\\" #address=\\\"ngModel\\\">\\n    <div *ngIf=\\\"address.invalid && address.touched\\\">Address is required</div>\\n  </div>\\n  <div>\\n    <label for=\\\"card\\\">Credit Card:</label>\\n    <input type=\\\"text\\\" id=\\\"card\\\" required [(ngModel)]=\\\"checkoutData.card\\\" name=\\\"card\\\" #card=\\\"ngModel\\\">\\n    <div *ngIf=\\\"card.invalid && card.touched\\\">Credit Card is required</div>\\n  </div>\\n  <button type=\\\"submit\\\" [disabled]=\\\"checkoutForm.invalid\\\">Place Order</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  cartItems: { product: any, quantity: number }[] = [];\n  total = 0;\n  checkoutData = {\n    name: '',\n    address: '',\n    card: ''\n  };\n\n  constructor(private router: Router, private cartService: CartService) { }\n\n  ngOnInit() : void{\n    this.cartService.getCartItems().subscribe(items => {\n      this.cartItems = items;\n      this.total = this.cartService.getTotal();\n    });\n  console.log(2)\n  }\n\n  placeOrder() {\n    // Implement order placement logic here\n    console.log('Order placed');\n  }\n\n  onSubmit() {\n    alert(`\n    Customer Information:\n    Name: ${this.checkoutData.name}\n    Address: ${this.checkoutData.address}\n    Credit Card: ${this.checkoutData.card}\n\n    Order Details:\n    ${this.cartItems.map(item => `${item.product.name} - ${item.product.price} x ${item.quantity}`).join('\\n')}\n    \n    Total: ${this.total}\n  `);\n    this.cartService.clearCart();\n    this.router.navigate(['/products']);\n  }\n}\n","module.exports = \".img{\\r\\n    width: 300px;\\r\\n    height: 300px;\\r\\n}\\r\\n.description{\\r\\n    width: 500px;\\r\\n}\\r\\nbutton{\\r\\n    background-color: gray;\\r\\n    padding: 10px 20px;\\r\\n    margin: 10px 20px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.details{\\r\\n    margin-left: 20px;\\r\\n}\\r\\n@media (max-width: 550px) {\\r\\n    .description{\\r\\n        width: 300px;\\r\\n        font-size: 12px;\\r\\n    }\\r\\n    \\r\\n}\\r\\n@media (max-width: 330px) {\\r\\n    .img{\\r\\n        width: 240px;\\r\\n    height: 240px;\\r\\n    }\\r\\n    .description{\\r\\n        width: 250px;\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n}\"","module.exports = \"<!-- product-detail.component.html -->\\n<button [routerLink]=\\\"['/products']\\\">BACK</button>\\n<div *ngIf=\\\"product\\\" class=\\\"details\\\">\\n  <img class=\\\"img\\\" [src]=\\\"product.imageUrl\\\" alt=\\\"{{ product.name }}\\\">\\n  <h2>{{ product.name }}</h2>\\n  <p class=\\\"description\\\">{{ product.description }}</p>\\n  <p>{{ product.price | currency }}</p>\\n  <button (click)=\\\"addToCart()\\\">Add to Cart</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from '../product.service';\nimport { CartService } from '../cart.service';\nimport { Product } from '../app.module';\n\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  product?: Product;\n\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService,\n    private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.productService.getProduct(id).subscribe(product => {\n      this.product = product;\n    });\n   \n  }\n\n  addToCart() {\n    if (this.product) {\n      this.cartService.addToCart(this.product, 1); // Add 1 item by default\n    }\n  }\n\n}\n","module.exports = \".img{\\r\\n    width: 300px;\\r\\n    height: 300px;\\r\\n}\\r\\n.description{\\r\\n    width: 500px;\\r\\n    height: 160px;\\r\\n}\\r\\n.product-list{\\r\\n    max-width: 1200px;\\r\\n    margin: 30px auto;\\r\\n    padding:0 20px;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    \\r\\n}\\r\\nbutton{\\r\\n    background-color: gray;\\r\\n    padding: 10px 20px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    \\r\\n}\\r\\n.product-card{\\r\\n    background-color: #bdbebd;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n.buttons{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    width: 240px\\r\\n}\\r\\na{\\r\\n    text-decoration: none;\\r\\n}\\r\\n.basket{\\r\\n    width: 80px;\\r\\n}\\r\\n@media (max-width: 1100px){\\r\\n\\r\\n    .img{\\r\\n        width: 150px;\\r\\n        height: 150px;\\r\\n    }\\r\\n    .description{\\r\\n        width: 300px;\\r\\n        height: 130px;\\r\\n        font-size: 12px;\\r\\n    }\\r\\n   \\r\\n}\\r\\n@media (max-width: 650px){\\r\\n    .product-list{\\r\\n        max-width: 300px;\\r\\n        \\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .product-card{\\r\\n        margin-bottom: 30px;\\r\\n    }\\r\\n}\\r\\n@media (max-width: 370px){\\r\\n    .description{\\r\\n        width: 250px;\\r\\n        height: 150px;\\r\\n        font-size: 10px;\\r\\n    }\\r\\n}\"","module.exports = \"<!-- product-list.component.html -->\\n\\n<div class=\\\"product-list\\\">\\n  <div class=\\\"product-card\\\" *ngFor=\\\"let product of products\\\">\\n    <img class=\\\"img\\\" [src]=\\\"product.imageUrl\\\" alt=\\\"{{ product.name }}\\\">\\n    <h3>{{ product.name }}</h3>\\n    <div class=\\\"part\\\">\\n        <p class=\\\"description\\\">{{ product.description }}</p>\\n        <p>{{ product.price | currency }}</p>\\n        <div class=\\\"buttons\\\" >\\n        <button (click)=\\\"addToCart(product)\\\">Add to Cart</button>\\n    \\n    <button [routerLink]=\\\"['/products', product.id]\\\"> <a [routerLink]=\\\"['/products', product.id]\\\">View Details</a></button>\\n    </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n<div [routerLink]=\\\"['/cart']\\\" style=\\\"display:flex; flex-direction: column; align-items: center; \\\">\\n<img class=\\\"basket\\\" src=\\\"src/app/imges/free-icon-shopping-basket-1077979.png\\\">\\n<a [routerLink]=\\\"['/cart']\\\" style=\\\"color:green;\\\">Move to cart</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { Product } from '../app.module';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products: Product[] = [];\n\n  constructor(\n    private productService: ProductService, \n    private cartService: CartService\n    ) { }\n\n  ngOnInit(): void {\n    this.productService.getProducts().subscribe(products => {\n      this.products = products;\n    });\n  }\n  addToCart(product) {\n    if (product) {\n      this.cartService.addToCart(product, 1); // Add 1 item by default\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Product } from './app.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private products: Product[] = [\n    { id: 1, name: 'Batik', description: 'In a smooth oxamite tale of a palette of diverse bars, the shards of this tea tell the story of several tea traditions: Kenya and Sri Lanka. Its great taste helps to find the most important learning points of black tea. Balance and richness, a low aroma that suggests citrus undertones, all in the background, makes black velvet one of the most striking representatives of its look.', price: 100, imageUrl: 'https://images.prom.ua/5057088044_chaj-batik-chernyj.jpg' },\n    { id: 2, name: 'Pryaniki', description: 'Gingerbread cookies with lemon filling from the Kievkhlib brand are made from choux pastry and topped with glaze. The baked goods are incredibly soft, moderately sweet with a slight citrus sourness. The product has a classic round shape and small size. Gingerbread cookies with lemon filling are not only delicious, but also quite healthy. Lemon jam prevents colds and strengthens the immune system and blood vessels. The baked goods are made from the highest quality products.', price: 200, imageUrl: 'https://cdn.27.ua/799/5d/54/3628372_1.jpeg' },\n    // Add more products here\n  ];\n\n  getProducts(): Observable<Product[]> {\n    return of(this.products);\n  }\n\n  getProduct(id: number): Observable<Product | undefined> {\n    return of(this.products.find(product => product.id === id));\n  }\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}